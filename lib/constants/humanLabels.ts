export const humanLabels = {
  headers: {
    boardBriefing: "Board Briefing",
    agentManagement: "Agent Management",
    modelManagement: "Model Management",
    promptManagement: "Prompt Management",
    costManagement: "Cost Management",
    usageAnalytics: "Usage Analytics",
    accessControl: "Access Control",
    settings: "Settings",
    playground: "Playground",
    agentProfile: "Meet Your Team Member",
    complianceOverview: "Staying on the Right Side",
    finopsOverview: "Money Matters",
    workflowManagement: "How Things Flow",
    systemHealth: "Everything Running Smoothly?",
    userManagement: "Who's Who Around Here",
    systemTools: "Tilo's System Tools",
    activityHistory: "Activity History",
    insights: "Insights",
    learnAboutTilo: "Learn About Tilo",
    connectedTools: "Connected Tools",
    howTiloWorks: "How Tilo Works",
    loginAccess: "Login Access",
    systemActivityIssues: "System Activity & Issues",
    exportsReports: "Exports & Reports",
    performanceInsights: "Performance & Insights",
    agentMetricsFinOps: "Agent Metrics & FinOps",
  },
  descriptions: {
    boardBriefing: "Board Briefing",
    agentManagement: "Manage and monitor AI agents",
    modelManagement: "Manage and configure AI models",
    promptManagement: "Manage and optimize AI prompts",
    costManagement: "Track and control AI costs",
    usageAnalytics: "Analyze AI usage patterns",
    accessControl: "Manage user access and permissions",
    settings: "Configure application settings",
    playground: "Experiment with AI models and prompts",
    mainDashboard: "Dashboard",
    ceoDashboard: "CEO Dashboard",
    securityDashboard: "Security Dashboard",
    complianceDashboard: "Compliance Dashboard",
    hrDashboard: "HR Dashboard",
    finopsDashboard: "FinOps Dashboard",
    roleManager: "Role Manager",
    userAccounts: "User Accounts",
    engagementLog: "Activity History",
    systemLogs: "System Activity & Issues",
    wiki: "Learn About Tilo",
    integrations: "Connected Tools",
    referenceArchitecture: "How Tilo Works",
    authentication: "Login Access",
    reportingCenter: "Exports & Reports",
    analyticsDashboard: "Performance & Insights",
    agentMonitoring: "Agent Metrics & FinOps",
    submitProject: "Submit Project",
    reviewSummary: "Review Summary",
    confirmation: "Confirmation",
  },
  navigation: {
    boardBriefing: "Board Briefing",
    agentManagement: "Agent Management",
    modelManagement: "Model Management",
    promptManagement: "Prompt Management",
    costManagement: "Cost Management",
    usageAnalytics: "Usage Analytics",
    accessControl: "Access Control",
    settings: "Settings",
    playground: "Playground",
    agents: "Agents",
    complianceDashboard: "Lexi's Oversight Space",
    finOpsDashboard: "Janet's Numbers Room",
    securityDashboard: "Erik's Watchtower",
    workflowCreator: "Build a Flow",
    roleManager: "Who Does What",
    orchestration: "How We Work Together",
    auditLog: "Activity History",
    referenceArchitecture: "How Tilo Works",
    assistant: "Assistant",
    dashboard: "Dashboard",
    userManagement: "User Management",
    system: "Tilo's System Tools",
    reports: "Insights",
    clientPortal: "Client Portal",
    systemTools: "Tilo's System Tools",
    activityHistory: "Activity History",
    insights: "Insights",
    learnAboutTilo: "Learn About Tilo",
    connectedTools: "Connected Tools",
    howTiloWorks: "How Tilo Works",
    loginAccess: "Login Access",
    systemActivityIssues: "System Activity & Issues",
    exportsReports: "Exports & Reports",
    performanceInsights: "Performance & Insights",
    agentMetricsFinOps: "Agent Metrics & FinOps",
  },
  workflows: {
    initiateWorkflow: "Let's Begin",
    workflowOwnership: "Who's in Charge of This?",
    triggerConditions: "When This Happens…",
    executionPath: "How it gets done",
    workflowStatus: "Where things stand",
    buildAFlow: "Build a Flow",
    entityRoleDescription:
      "Design a process and assign responsibility across your team. Only Team Members (Agents) can initiate and execute flows. Silent Watchers and Outside Collaborators can observe or trigger scoped inputs.",
    entityCapabilities: {
      teamMember: "Can initiate, execute, and own workflows",
      silentWatcher: "Can monitor and report on workflow activity",
      outsideCollaborator: "Can trigger workflows through scoped integrations",
      coordinator: "Can manage and orchestrate between workflows",
      domainExpert: "Can provide specialized input and validation",
    },
  },
  fields: {
    agent_name: "Who is this?",
    role_permissions: "What they can do",
    last_updated_by: "Last touched by",
    audit_score: "Confidence Level",
    trigger_type: "What kicks this off?",
    shared_context_enabled: "Shared understanding?",
    workflow_status: "Where things stand",
  },
  entities: {
    observer: "Silent Watcher",
    partner: "Outside Collaborator",
  },
  actions: {
    executeTask: "Get It Done",
    exportReport: "Get the Data",
    generateReport: "Create Summary",
    viewDetails: "Take a Closer Look",
    editSettings: "Make Changes",
    deleteItem: "Remove This",
    createNew: "Start Fresh",
    saveChanges: "Lock It In",
    cancelAction: "Never Mind",
  },
  onboarding: {
    lexi: "Lexi is your compliance ally. She watches for things that might get us into trouble.",
    janet: "This space helps Janet keep tabs on how we're using our resources wisely.",
    tilo: "Tilo is your organizational mind - the central intelligence that coordinates everything.",
    erik: "Erik keeps watch over security threats and protects our sensitive information.",
    ada: "Ada thinks strategically about projects and helps plan for the future.",
    max: "Max optimizes how we communicate with AI and builds better prompts.",
    bob: "Bob handles client intake and makes sure we get all the details right.",
    shandry: "Shandry manages HR and helps our team grow and develop.",
    eve: "Eve monitors system health and recommends improvements.",
  },
  status: {
    active: "Up and Running",
    inactive: "Taking a Break",
    pending: "Getting Ready",
    completed: "All Done",
    inProgress: "Working on It",
    failed: "Hit a Snag",
    warning: "Heads Up",
    critical: "Needs Attention Now",
  },
  professional: {
    navigation: {
      agents: "Agents",
      complianceDashboard: "Compliance Dashboard",
      finOpsDashboard: "Financial Operations",
      workflowCreator: "Workflow Management",
      roleManager: "Role Management",
      orchestration: "System Orchestration",
      auditLog: "Audit Log",
      referenceArchitecture: "Reference Architecture",
      assistant: "AI Assistant",
      dashboard: "Dashboard",
      userManagement: "User Management",
      system: "System Administration",
      reports: "Reports & Analytics",
      clientPortal: "Client Portal",
    },
    status: {
      active: "Online",
      inactive: "Offline",
      pending: "Pending",
      completed: "Completed",
      inProgress: "In Progress",
      failed: "Failed",
      warning: "Warning",
      critical: "Critical",
    },
  },
  agents: {
    registry: "Meet Your Team",
    searchPlaceholder: "Search agents by name, role, or department...",
    filterByStatus: "Filter by status",
    filterByDepartment: "Filter by department",
    allStatus: "All Status",
    allDepartments: "All Departments",
    noAgentsFound: "No agents found",
    tryAdjustingFilters: "Try adjusting your search terms or filters to find the team members you're looking for.",
    lastActive: "Last Active",
    capabilities: "What they can do",
    contextualDescription:
      "These are your domain experts — automated teammates like Janet (FinOps), Lexi (Compliance), and Erik (Security). Each one brings specialized knowledge and works alongside you to keep things running smoothly.",
  },
  departments: {
    strategy: "Strategy",
    clientServices: "Client Services",
    operations: "Operations",
    security: "Security",
    finance: "Finance",
    compliance: "Compliance",
    aiOperations: "AI Operations",
    humanResources: "Human Resources",
  },
  roles: {
    whoDoesWhat: "Who Does What",
    description:
      "This view helps you understand which team members, observers, and collaborators have access to what — and what they can actually do.",
    entityTypes: {
      teamMember: "Team Member",
      silentWatcher: "Silent Watcher",
      outsideCollaborator: "Outside Collaborator",
    },
    permissions: {
      whatTheyCanDo: "What they can do",
      lastTouchedBy: "Last touched by",
      entityName: "Name",
      entityType: "Role Type",
    },
    legend: {
      teamMembers: "Team Members can initiate and execute workflows.",
      silentWatchers: "Silent Watchers can observe and report on activity, but never act.",
      outsideCollaborators: "Outside Collaborators interact with workflows through scoped access only.",
    },
  },
  getLabel: (path: string, mode: "professional" | "humanized" = "humanized") => {
    const keys = path.split(".")
    let current: any = mode === "professional" ? humanLabels.professional : humanLabels

    for (const key of keys) {
      current = current?.[key]
      if (!current) break
    }

    if (!current && mode === "professional") {
      current = humanLabels
      for (const key of keys) {
        current = current?.[key]
        if (!current) break
      }
    }

    return current || path
  },
}

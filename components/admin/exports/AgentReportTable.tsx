import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from "@/components/ui/tooltip"
import { Download, FileText, Shield, DollarSign, Users, Bot } from "lucide-react"

interface AgentReportTableProps {
  canExecuteActions: boolean
  isReadOnlyMode: boolean
}

const AgentReportTable = ({ canExecuteActions, isReadOnlyMode }: AgentReportTableProps) => {
  const mockReports = [
    {
      id: 1,
      name: "Q4 Financial Analysis",
      generatedBy: "Janet",
      agentIcon: DollarSign,
      type: "Financial",
      created: "2024-01-15",
      status: "Complete",
      statusColor: "bg-green-500/20 text-green-400",
      compliance: "SOX Compliant",
      size: "2.4 MB",
    },
    {
      id: 2,
      name: "Security Audit Report",
      generatedBy: "Erik",
      agentIcon: Shield,
      type: "Security",
      created: "2024-01-14",
      status: "Complete",
      statusColor: "bg-green-500/20 text-green-400",
      compliance: "ISO 27001",
      size: "1.8 MB",
    },
    {
      id: 3,
      name: "HR Training Metrics",
      generatedBy: "Shandry",
      agentIcon: Users,
      type: "HR",
      created: "2024-01-13",
      status: "Processing",
      statusColor: "bg-yellow-500/20 text-yellow-400",
      compliance: "GDPR Compliant",
      size: "1.2 MB",
    },
    {
      id: 4,
      name: "Compliance Dashboard Export",
      generatedBy: "Lexi",
      agentIcon: Shield,
      type: "Compliance",
      created: "2024-01-12",
      status: "Complete",
      statusColor: "bg-green-500/20 text-green-400",
      compliance: "Regulatory",
      size: "3.1 MB",
    },
    {
      id: 5,
      name: "Agent Performance Summary",
      generatedBy: "Eve",
      agentIcon: Bot,
      type: "Analytics",
      created: "2024-01-11",
      status: "Failed",
      statusColor: "bg-red-500/20 text-red-400",
      compliance: "Internal",
      size: "0.9 MB",
    },
  ]

  const getExportTooltip = () => {
    return "Only the CEO may download agent-generated reports. Admins have view-only access."
  }

  return (
    <Card className="bg-[#0f1a2c]/80 border border-cyan-500/20 text-white">
      <CardHeader>
        <CardTitle className="text-xl font-semibold text-cyan-400">Agent-Generated Reports</CardTitle>
        <p className="text-blue-300 text-sm">Reports automatically generated by AI agents across the organization.</p>
      </CardHeader>
      <CardContent>
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead>
              <tr className="border-b border-cyan-500/20">
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Report Name</th>
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Generated By</th>
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Type</th>
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Created</th>
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Status</th>
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Compliance</th>
                <th className="text-left py-3 px-4 text-cyan-400 font-medium">Actions</th>
              </tr>
            </thead>
            <tbody>
              {mockReports.map((report) => {
                const IconComponent = report.agentIcon
                return (
                  <tr key={report.id} className="border-b border-cyan-500/10 hover:bg-cyan-500/5">
                    <td className="py-3 px-4">
                      <div className="flex items-center gap-2">
                        <FileText className="h-4 w-4 text-cyan-400" />
                        <span className="text-white font-medium">{report.name}</span>
                      </div>
                      <div className="text-xs text-blue-300">{report.size}</div>
                    </td>
                    <td className="py-3 px-4">
                      <div className="flex items-center gap-2">
                        <IconComponent className="h-4 w-4 text-cyan-400" />
                        <span className="text-blue-300">{report.generatedBy}</span>
                      </div>
                    </td>
                    <td className="py-3 px-4">
                      <Badge variant="outline" className="border-cyan-500/30 text-cyan-300">
                        {report.type}
                      </Badge>
                    </td>
                    <td className="py-3 px-4 text-blue-300">{report.created}</td>
                    <td className="py-3 px-4">
                      <Badge className={report.statusColor}>{report.status}</Badge>
                    </td>
                    <td className="py-3 px-4">
                      <Badge variant="outline" className="border-green-500/30 text-green-300">
                        {report.compliance}
                      </Badge>
                    </td>
                    <td className="py-3 px-4">
                      <TooltipProvider>
                        <Tooltip>
                          <TooltipTrigger asChild>
                            <div>
                              <Button
                                size="sm"
                                variant="outline"
                                className="border-cyan-500/30 text-cyan-300 hover:bg-cyan-500/10"
                                disabled={!canExecuteActions || report.status !== "Complete"}
                              >
                                <Download className="h-4 w-4" />
                              </Button>
                            </div>
                          </TooltipTrigger>
                          {!canExecuteActions && report.status === "Complete" && (
                            <TooltipContent className="bg-slate-900 border border-cyan-500/20">
                              <p className="text-cyan-300">{getExportTooltip()}</p>
                              <p className="text-slate-400 text-xs">Report generated by {report.generatedBy}</p>
                            </TooltipContent>
                          )}
                        </Tooltip>
                      </TooltipProvider>
                    </td>
                  </tr>
                )
              })}
            </tbody>
          </table>
        </div>
      </CardContent>
    </Card>
  )
}

export default AgentReportTable
